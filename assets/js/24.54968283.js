(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{202:function(e,t,a){"use strict";a.r(t);var s=a(3),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"items-view"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#items-view"}},[e._v("#")]),e._v(" Items view")]),e._v(" "),a("h2",{attrs:{id:"type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type"}},[e._v("#")]),e._v(" "),a("code",[e._v("type")])]),e._v(" "),a("p",[a("em",[e._v("String")]),e._v(", default: "),a("strong",[e._v("table")]),e._v(". Available values: "),a("strong",[e._v("table")]),e._v(", "),a("strong",[e._v("tree")]),e._v(". Information items view should be displayed as table or tree.")]),e._v(" "),a("h2",{attrs:{id:"mode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mode"}},[e._v("#")]),e._v(" "),a("code",[e._v("mode")])]),e._v(" "),a("p",[a("em",[e._v("String")]),e._v(", default: "),a("strong",[e._v("client")]),e._v(". Available values: "),a("strong",[e._v("client")]),e._v(", "),a("strong",[e._v("server")]),e._v(". Information items view should be automatically by Vue CRUD or server side by API.")]),e._v(" "),a("h2",{attrs:{id:"config"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#config"}},[e._v("#")]),e._v(" "),a("code",[e._v("config")])]),e._v(" "),a("p",[a("em",[e._v("Object")]),e._v(", optional. Property must be defined if field "),a("code",[e._v("type")]),e._v(" is "),a("strong",[e._v("tree")]),e._v(".")]),e._v(" "),a("p",[e._v("Parameters:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("parentColumnName")]),e._v(": Name of column with parent item id. Default value: "),a("strong",[e._v("parent_id")])]),e._v(" "),a("li",[a("code",[e._v("unassignedItemParent")]),e._v(": Value of item's parent that means this item is unassigned (root object). Default value: "),a("strong",[e._v("null")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);